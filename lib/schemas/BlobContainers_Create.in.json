{
    "type": "object",
    "properties": {
        "resourceGroupName": {
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[-\\w\\._\\(\\)]+$"
        },
        "accountName": {
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "containerName": {
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63
        },
        "subscriptionId": {
            "required": true,
            "type": "string",
            "minLength": 1
        },
        "requestBody": {
            "allOf": [
                {
                    "allOf": [
                        {
                            "properties": {
                                "id": {
                                    "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "name": {
                                    "description": "The name of the resource",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "type": {
                                    "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
                                    "readOnly": true,
                                    "type": "string"
                                }
                            },
                            "x-ms-azure-resource": true,
                            "type": "object"
                        }
                    ],
                    "description": "The resource model definition for a Azure Resource Manager resource with an etag.",
                    "properties": {
                        "etag": {
                            "description": "Resource Etag.",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "x-ms-client-name": "AzureEntityResource",
                    "type": "object"
                }
            ],
            "description": "Properties of the blob container, including Id, resource name, resource type, Etag.",
            "properties": {
                "properties": {
                    "description": "Properties of the blob container.",
                    "x-ms-client-flatten": true,
                    "x-ms-client-name": "ContainerProperties",
                    "properties": {
                        "hasImmutabilityPolicy": {
                            "description": "The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.",
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "hasLegalHold": {
                            "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.",
                            "readOnly": true,
                            "type": "boolean"
                        },
                        "immutabilityPolicy": {
                            "description": "The ImmutabilityPolicy property of the container.",
                            "readOnly": true,
                            "x-ms-client-name": "ImmutabilityPolicy",
                            "properties": {
                                "etag": {
                                    "description": "ImmutabilityPolicy Etag.",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "properties": {
                                    "description": "The properties of an ImmutabilityPolicy of a blob container.",
                                    "x-ms-client-flatten": true,
                                    "properties": {
                                        "immutabilityPeriodSinceCreationInDays": {
                                            "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                            "type": "integer"
                                        },
                                        "state": {
                                            "description": "The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.",
                                            "enum": [
                                                "Locked",
                                                "Unlocked"
                                            ],
                                            "readOnly": true,
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": true,
                                                "name": "ImmutabilityPolicyState"
                                            }
                                        }
                                    },
                                    "required": [
                                        "immutabilityPeriodSinceCreationInDays"
                                    ]
                                },
                                "updateHistory": {
                                    "description": "The ImmutabilityPolicy update history of the blob container.",
                                    "items": {
                                        "description": "An update history of the ImmutabilityPolicy of a blob container.",
                                        "properties": {
                                            "immutabilityPeriodSinceCreationInDays": {
                                                "description": "The immutability period for the blobs in the container since the policy creation, in days.",
                                                "readOnly": true,
                                                "type": "integer"
                                            },
                                            "objectIdentifier": {
                                                "description": "Returns the Object ID of the user who updated the ImmutabilityPolicy.",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "tenantId": {
                                                "description": "Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "description": "Returns the date and time the ImmutabilityPolicy was updated.",
                                                "format": "date-time",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "update": {
                                                "description": "The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.",
                                                "enum": [
                                                    "put",
                                                    "lock",
                                                    "extend"
                                                ],
                                                "readOnly": true,
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": true,
                                                    "name": "ImmutabilityPolicyUpdateType"
                                                }
                                            },
                                            "upn": {
                                                "description": "Returns the User Principal Name of the user who updated the ImmutabilityPolicy.",
                                                "readOnly": true,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "readOnly": true,
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "lastModifiedTime": {
                            "description": "Returns the date and time the container was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "leaseDuration": {
                            "description": "Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.",
                            "enum": [
                                "Infinite",
                                "Fixed"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": true,
                                "name": "LeaseDuration"
                            }
                        },
                        "leaseState": {
                            "description": "Lease state of the container.",
                            "enum": [
                                "Available",
                                "Leased",
                                "Expired",
                                "Breaking",
                                "Broken"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": true,
                                "name": "LeaseState"
                            }
                        },
                        "leaseStatus": {
                            "description": "The lease status of the container.",
                            "enum": [
                                "Locked",
                                "Unlocked"
                            ],
                            "readOnly": true,
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": true,
                                "name": "LeaseStatus"
                            }
                        },
                        "legalHold": {
                            "description": "The LegalHold property of the container.",
                            "readOnly": true,
                            "properties": {
                                "hasLegalHold": {
                                    "description": "The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.",
                                    "readOnly": true,
                                    "type": "boolean"
                                },
                                "tags": {
                                    "description": "The list of LegalHold tags of a blob container.",
                                    "items": {
                                        "description": "A tag of the LegalHold of a blob container.",
                                        "properties": {
                                            "objectIdentifier": {
                                                "description": "Returns the Object ID of the user who added the tag.",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "tag": {
                                                "description": "The tag value.",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "tenantId": {
                                                "description": "Returns the Tenant ID that issued the token for the user who added the tag.",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "timestamp": {
                                                "description": "Returns the date and time the tag was added.",
                                                "format": "date-time",
                                                "readOnly": true,
                                                "type": "string"
                                            },
                                            "upn": {
                                                "description": "Returns the User Principal Name of the user who added the tag.",
                                                "readOnly": true,
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "metadata": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "description": "A name-value pair to associate with the container as metadata.",
                            "type": "object"
                        },
                        "publicAccess": {
                            "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
                            "enum": [
                                "Container",
                                "Blob",
                                "None"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                                "modelAsString": false,
                                "name": "PublicAccess"
                            }
                        }
                    }
                }
            },
            "type": "object"
        },
        "api_version": {
            "required": true,
            "type": "string",
            "minLength": 1
        }
    }
}